#!/bin/bash
#### PiFire - A pellet grill/smoker management utility.
####
#### PiFire is written by Ben Parmeter aka nebhead
#### Copyright 2020 - 2023
#### https://github.com/nebhead/PiFire
####
#### PiFireOS build files written by Kyle Menigoz aka CalonMerc
#### Based on the fantastic work of CustomPiOS by Guy Sheffer aka guysoft
####
#### This File is distributed under MIT License
####
set -x
set -e

export LC_ALL=C

source /common.sh

# Set /tmp to RAM based storage in /etc/fstab 
echo "tmpfs /tmp  tmpfs defaults,noatime 0 0" | sudo tee -a /etc/fstab > /dev/null
#update aptitude packages
apt update
#upgrade aptitude packages
apt upgrade -y
#install dependencies
apt install python3-dev python3-pip python3-venv python3-rpi.gpio python3-scipy nginx git supervisor ttf-mscorefonts-installer redis-server libatlas-base-dev libopenjp2-7 -y

#set up pifire group
groupadd pifire
usermod -aG pifire $BASE_USER
usermod -aG pifire root

# Download PiFire
pushd ${PIFIRE_INSTALL_PATH}
    if [ "${PIFIRE_REPO_BRANCH}" == "master" ]; then
        git clone --depth 1 $PIFIRE_REPO_URL pifire
    else
        git clone --depth 1 --branch $PIFIRE_REPO_BRANCH $PIFIRE_REPO_URL pifire
    fi
    # Change ownership to group=pifire for all files/directories in pifire 
    chown -R $BASE_USER:pifire pifire
    # Change ability for pifire group to read/write/execute 
    chmod -R 775 pifire
    #set up Python VENV
    python -m venv --system-site-packages pifire
    du -h --max-depth 1 / 2>/dev/null | grep '[0-9\.]\+G' | sort -nr
    apt show ".*" | grep "Installed-Size:" | cut -f2 -d" " | sort -nrk 1 | head -n 1
    pushd pifire
        source bin/activate 
        df -h
        # Install module dependencies 
        python -m pip install "flask==2.3.3" 
        df -h
        python -m pip install flask-mobility
        df -h
        python -m pip install flask-qrcode
        df -h
        python -m pip install flask-socketio
        df -h
        python -m pip install eventlet
        df -h
        python -m pip install gunicorn
        df -h
        python -m pip install gpiozero
        df -h
        python -m pip install redis
        df -h
        python -m pip install uuid
        df -h
        python -m pip install influxdb-client[ciso]
        df -h
        python -m pip install apprise
        df -h
        python -m pip install scikit-fuzzy
        df -h
        python -m pip install scikit-learn
        df -h
        python -m pip install ratelimitingfilter
        df -h
        python -m pip install "pillow>=9.2.0"
    
        #configure  auto-install scripts
        pushd auto-install
            #copy Nginx file(s)
            rm /etc/nginx/sites-enabled/default
            cp nginx/pifire.nginx /etc/nginx/sites-available/pifire
            ln -s /etc/nginx/sites-available/pifire /etc/nginx/sites-enabled

            #copy Supervisor file(s)
            cp supervisor/*.conf /etc/supervisor/conf.d/
        popd
    popd
popd

#configure Supervisor
if [[ ${PIFIRE_SUPERVISORD_ENABLE_UI} = "ENABLE_SVISOR" ]];then
   echo " " | sudo tee -a /etc/supervisor/supervisord.conf > /dev/null
   echo "[inet_http_server]" | sudo tee -a /etc/supervisor/supervisord.conf > /dev/null
   echo "port = 9001" | sudo tee -a /etc/supervisor/supervisord.conf > /dev/null
   echo "username = " ${PIFIRE_SUPERVISORD_DEFAULT_USER} | sudo tee -a /etc/supervisor/supervisord.conf > /dev/null
   echo "password = " ${PIFIRE_SUPERVISORD_DEFAULT_PASS} | sudo tee -a /etc/supervisor/supervisord.conf > /dev/null
fi

# Configure config.txt to enable SPI and i2c
echo "dtparam=spi=on" | tee -a /boot/config.txt > /dev/null
echo "dtparam=i2c_arm=on" | tee -a /boot/config.txt > /dev/null
echo "i2c-dev" | tee -a /etc/modules > /dev/null