CONFIG_DIR=$(dirname $(realpath -s $BASH_SOURCE))

# Import the local config if we have one

if [ -f $CONFIG_DIR/config.local ]
then
  echo "Sourcing config.local..."
  source $CONFIG_DIR/config.local
fi

source ${DIST_PATH}/config

if [ -f ${DIST_PATH}/config.local ]
then
  echo "Sourcing distro config.local..."
  source ${DIST_PATH}/config.local
fi

# Get only a list
TMP="${MODULES//(/,}"
TMP="${TMP// /}"
MODULES_LIST="${TMP//)/,}"

for module in $(echo "${MODULES_LIST}" | tr "," "\n")
do
    if [ -d "${DIST_PATH}/modules/${module}" ]; then
        export MODULE_PATH="${DIST_PATH}/modules/${module}"
    elif   [ -d "${CUSTOM_PI_OS_PATH}/modules/${module}" ]; then
        export MODULE_PATH="${CUSTOM_PI_OS_PATH}/modules/${module}"
    fi
    
    echo loading $module config at ${MODULE_PATH}/config
    if [ -f ${MODULE_PATH}/config ]; then
        source ${MODULE_PATH}/config
    else
        echo "WARNING: module ${module} has no config file"
    fi
    
    ###############################################################################
    # Print and export the final configuration.

    echo "================================================================"
    echo "Using the following config:"
    module_up=${module^^} module_up=${module_up//-/_}_
    
    # Export variables that satisfy the $module_up prefix
    while IFS= read -r var; do export "$var"; echo "$var"; done < <(compgen -A variable "$module_up")

    echo "================================================================"
done

